stages:
  - build
  - validate
  - test

variables:
  COMPOSER_CACHE_DIR: "$CI_PROJECT_DIR/.composer-cache"
  DRUPAL_ROOT: web

cache:
  paths:
    - vendor/
    - $COMPOSER_CACHE_DIR

# ========================
# BASE IMAGES
# ========================
.default-php-job:
  image: php:8.3
  before_script:
    - apt-get update && apt-get install -y git unzip libpng-dev libjpeg-dev libfreetype6-dev libonig-dev libzip-dev
    - docker-php-ext-configure gd --with-freetype --with-jpeg
    - docker-php-ext-install gd pdo pdo_mysql zip opcache
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

.default-node-job:
  image: node:20
  before_script:
    - npm ci || npm install

# ========================
# BUILD
# ========================
composer:
  stage: build
  extends: .default-php-job
  script:
    - composer install --prefer-dist --no-interaction --no-progress
  artifacts:
    paths:
      - vendor/
      - $DRUPAL_ROOT/core
      - $DRUPAL_ROOT/modules/contrib
      - $DRUPAL_ROOT/themes/contrib

composer:max-php:
  stage: build
  image: php:8.3
  extends: .default-php-job
  script:
    - composer validate --strict

composer:previous-major:
  stage: build
  image: php:8.2
  extends: .default-php-job
  script:
    - composer validate --strict

pages:
  stage: build
  image: node:20
  script:
    - echo "Generar documentación o reportes aquí"
    - mkdir -p public && echo "<h1>Pipeline Drupal</h1>" > public/index.html
  artifacts:
    paths:
      - public
  only:
    - main

# ========================
# VALIDATE
# ========================
composer-lint:
  stage: validate
  extends: .default-php-job
  script:
    - composer validate --strict

phpcs:
  stage: validate
  extends: .default-php-job
  script:
    - composer global require drupal/coder
    - ~/.composer/vendor/bin/phpcs --standard=Drupal --extensions=php,module,inc,install,test,profile,theme $DRUPAL_ROOT/modules/custom

phpstan:
  stage: validate
  extends: .default-php-job
  script:
    - composer require --dev phpstan/phpstan
    - vendor/bin/phpstan analyse $DRUPAL_ROOT/modules/custom --level=5

eslint:
  stage: validate
  extends: .default-node-job
  script:
    - npx eslint $DRUPAL_ROOT/modules/custom $DRUPAL_ROOT/themes/custom

stylelint:
  stage: validate
  extends: .default-node-job
  script:
    - npx stylelint "**/*.scss"

# ========================
# TEST
# ========================
phpunit:
  stage: test
  extends: .default-php-job
  services:
    - mysql:5.7
  variables:
    MYSQL_DATABASE: drupal
    MYSQL_USER: drupal
    MYSQL_PASSWORD: drupal
    MYSQL_ROOT_PASSWORD: root
  script:
    - vendor/bin/phpunit --configuration core/phpunit.xml.dist

phpunit:previous-major:
  stage: test
  image: php:8.2
  extends: .default-php-job
  services:
    - mysql:5.7
  script:
    - vendor/bin/phpunit --configuration core/phpunit.xml.dist

phpunit:old:
  stage: test
  image: php:8.1
  extends: .default-php-job
  services:
    - mysql:5.7
  script:
    - vendor/bin/phpunit --configuration core/phpunit.xml.dist
